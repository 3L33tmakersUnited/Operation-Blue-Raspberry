from gpiozero import MCP3008
import time
from openai import OpenAI

client = OpenAI()
gas_sensor = MCP3008(channel=0)

print("Warming up sensor...")
time.sleep(60)
print("Warmup complete. Establishing baseline...")

# Establish baseline (30 samples over 30 seconds)
baseline_samples = []
for _ in range(30):
    baseline_samples.append(gas_sensor.value)
    time.sleep(1)

baseline = sum(baseline_samples) / len(baseline_samples)
print(f"Baseline established at {baseline:.4f}")

while True:
    reading = gas_sensor.value
    scaled_reading = reading * 1023
    deviation = (reading - baseline) / baseline * 100

    # Build message for AI analysis
    sensor_message = (
        f"Gas sensor reading (scaled): {scaled_reading:.2f}\n"
        f"Gas sensor reading (raw): {reading:.4f}\n"
        f"Deviation from baseline: {deviation:.2f}%"
    )

    # Send reading to AI for interpretation
    response = client.chat.completions.create(
        model="gpt-5",
        messages=[
            {"role": "system", "content": (
                "You are an air quality monitoring assistant. "
                "Analyze sensor data trends and estimate whether vapor or other gas events might be occurring. "
                "Be cautious — only say 'possible vapor event detected' if readings rise significantly over baseline."
            )},
            {"role": "user", "content": sensor_message}
        ]
    )

    analysis = response.choices[0].message.content
    print("\n--- New Measurement ---")
    print("AI analysis:", analysis)

    # Optional: local alert trigger
    if deviation > 30:
        print("⚠️ ALERT: Significant increase detected!")

    # Wait 5 minutes (300 seconds) before next reading
    time.sleep(300)
